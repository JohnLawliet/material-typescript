{"version":3,"sources":["components/cards/cards.component.tsx","services/index.ts","pages/notes/Notes.tsx","pages/create/Create.tsx","theme.ts","components/layout/layout.styles.ts","components/layout/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","avatar","backgroundColor","note","category","yellow","green","pink","blue","NoteCard","props","title","details","id","deleteNote","classes","Card","elevation","CardHeader","Avatar","className","toUpperCase","action","IconButton","onClick","console","log","DeleteOutlined","subheader","CardContent","Typography","variant","color","AXIOS","axios","create","baseURL","a","this","get","res","data","Error","post","delete","Notes","useState","notes","setNotes","error","setError","fetchData","services","getData","status","deleteData","useEffect","Container","breakpointCols","default","1100","700","columnClassName","map","initialValues","Create","history","useHistory","component","gutterBottom","validationSchema","object","string","required","min","max","oneOf","onSubmit","values","Promise","reject","setTimeout","putData","dbResponse","then","push","errors","isSubmitting","autoComplete","Box","py","TextField","name","type","label","fullWidth","multiline","rows","FormLabel","RadioGroup","row","FormControlLabel","value","control","Radio","disabled","Button","endIcon","startIcon","CircularProgress","size","JSON","stringify","theme","createMuiTheme","palette","primary","main","secondary","page","background","width","padding","spacing","drawer","drawerPaper","root","display","active","appbar","toolbar","mixins","date","flexGrow","marginLeft","Layout","children","location","useLocation","menuItems","text","icon","path","AppBar","Toolbar","format","Date","src","Drawer","anchor","paper","List","item","ListItem","button","pathname","undefined","ListItemIcon","ListItemText","App","ThemeProvider","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0c59895.chunk.js","sourcesContent":["import { INote } from \"../../commonTypes\"\r\nimport Card from '@material-ui/core/Card'\r\nimport CardHeader from '@material-ui/core/CardHeader'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport { DeleteOutlined } from \"@material-ui/icons\"\r\nimport { makeStyles } from \"@material-ui/core\"\r\nimport { blue, green, pink, yellow } from \"@material-ui/core/colors\"\r\n\r\n\r\n// used any here as otherwise typescript throws an error as the component receives null object \r\n// on first load\r\nconst useStyles = makeStyles({\r\n    avatar:{\r\n        backgroundColor: (note:any) => {\r\n            switch(note.category){\r\n                case 'work' : return yellow[700]\r\n                case 'money' : return green[500]\r\n                case 'todos' : return pink[500]\r\n                default: return blue[500]\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\n// useReducer here to delete a note which would affect the parent also\r\nconst NoteCard = (props: {note:INote, deleteNote: any}) => {\r\n    const {title, details, category, id } = props.note\r\n    const {deleteNote} = props\r\n    const classes = useStyles(props.note)\r\n\r\n    return (\r\n        <Card elevation={1} >\r\n            <CardHeader \r\n                avatar={\r\n                    <Avatar className={classes.avatar}>\r\n                    {\r\n                        category[0].toUpperCase()\r\n                    }\r\n                    </Avatar>\r\n                }\r\n                action={\r\n                <IconButton onClick={() => {\r\n                    console.log(\"bru\")\r\n                    deleteNote(id)\r\n                }}>\r\n                    <DeleteOutlined />\r\n                </IconButton>}\r\n                title={title}\r\n                subheader={category}\r\n            />\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    {details}\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default NoteCard\r\n","import axios from \"axios\";\r\nimport { ICreate } from \"../commonTypes\";\r\n\r\n\r\nclass Services {\r\n    AXIOS = axios.create({ baseURL: \"https://my-json-server.typicode.com/JohnLawliet/material-typescript\" });\r\n    async getData(){\r\n        try{\r\n            const res = await this.AXIOS.get('/notes')\r\n            if (!res || !res.data){\r\n                throw new Error(\"Could not get data\")\r\n            }\r\n            return res\r\n        }\r\n        catch(e){\r\n            throw e\r\n        }        \r\n    }\r\n\r\n    async putData(note : ICreate){\r\n        try{\r\n            const res = await this.AXIOS.post('/notes',note)\r\n            if (!res || !res.data){\r\n                throw new Error(\"Could not create note\")\r\n            }\r\n            return \"Created Note\"\r\n        }\r\n        catch(e){\r\n            throw e\r\n        }  \r\n    }\r\n\r\n    async deleteData(id: number){        \r\n        try{\r\n            const res = await this.AXIOS.delete(`/notes/${id}`)\r\n            if (!res || !res.data){\r\n                throw new Error(\"Could not delete note\")\r\n            }\r\n            return \"Note deleted\"\r\n        }\r\n        catch(e){\r\n            throw e\r\n        }  \r\n    }\r\n}\r\n\r\n\r\nexport default new Services()\r\n","import { useState } from \"react\"\r\nimport { useEffect } from \"react\"\r\nimport { Container } from \"@material-ui/core\"\r\nimport NoteCard from '../../components/cards/cards.component'\r\nimport { INote } from \"../../commonTypes\"\r\nimport services from \"../../services\"\r\nimport Masonry from \"react-masonry-css\"\r\n\r\nconst Notes = () => {\r\n    const [notes, setNotes] = useState<INote[]>([])\r\n    const [error, setError] = useState<string | undefined>(\"\")\r\n\r\n    const fetchData = async () => {\r\n        const res = await services.getData()\r\n        if (res.status!==200){\r\n            setError(res.data)\r\n        }\r\n        else setNotes(res.data)\r\n    }\r\n\r\n    const deleteNote = async (id:number) => {\r\n        try{\r\n            await services.deleteData(id)\r\n            fetchData()\r\n        }\r\n        catch(e){\r\n            setError(e)\r\n        }        \r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData()        \r\n    },[setNotes])\r\n\r\n    const breakpoints = {\r\n        default: 3,\r\n        1100: 2,\r\n        700: 1\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n        {\r\n            error?\r\n            <p>{error}</p> :\r\n            <Masonry\r\n                breakpointCols={breakpoints}\r\n                className=\"my-masonry-grid\"\r\n                columnClassName=\"my-masonry-grid_column\"\r\n            >\r\n            {\r\n                notes?.map(note => (\r\n                    <div \r\n                        key={note.id}\r\n                    >\r\n                        <NoteCard note={note} deleteNote={deleteNote} />\r\n                    </div>\r\n                ))\r\n            }\r\n            </Masonry>\r\n            \r\n        }                    \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Notes\r\n","import Typography from \"@material-ui/core/Typography\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Container from \"@material-ui/core/Container\"\r\nimport Box from \"@material-ui/core/Box\"\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { TextField, RadioGroup } from 'formik-material-ui';\r\nimport { CircularProgress, FormControlLabel, Radio, FormLabel  } from \"@material-ui/core\";\r\nimport { object, string } from \"yup\";\r\nimport { useHistory } from \"react-router\";\r\nimport { ICreate } from \"../../commonTypes\";\r\nimport services from \"../../services\";\r\n\r\nconst initialValues : ICreate ={\r\n    title: '',\r\n    details: '',\r\n    category: '',\r\n}\r\n\r\nconst Create = () => {\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <Container>\r\n            <Typography\r\n                variant=\"h6\"\r\n                component=\"h2\"\r\n                color=\"textSecondary\"\r\n                gutterBottom\r\n            >\r\n                Create a note\r\n            </Typography>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema ={\r\n                    object({\r\n                        title:string().required().min(5),\r\n                        details:string().required().min(10).max(400),\r\n                        category: string().required().oneOf([\"money\",\"work\",\"todos\",\"reminders\"])\r\n                    })\r\n                }\r\n                onSubmit={(values) => \r\n                    new Promise((res, reject) => \r\n                        setTimeout(async () => {\r\n                            try{\r\n                                const dbResponse = await services.putData(values)\r\n                                res(dbResponse)\r\n                            }\r\n                            catch(e){\r\n                                reject(e)\r\n                            }\r\n                        }, 2000,) \r\n                    ).then(res => {\r\n                        console.log(\"RESSS : \",res)\r\n                        history.push('/')\r\n                    })\r\n                }\r\n            >\r\n            {({ values, errors, isSubmitting }) => (\r\n                <Form autoComplete=\"off\">\r\n                    <Box py={1}>\r\n                        <Field \r\n                            component={TextField}\r\n                            name=\"title\"\r\n                            type=\"text\"\r\n                            label=\"Title\"\r\n                            color=\"primary\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                        />\r\n                    </Box>\r\n\r\n                    <Box py={1}>\r\n                        <Field \r\n                        variant=\"outlined\"\r\n                            component={TextField}\r\n                            name=\"details\"\r\n                            type=\"text\"\r\n                            label=\"Details\"\r\n                            color=\"primary\"\r\n                            fullWidth multiline\r\n                            rows={4}\r\n                        />\r\n                    </Box>\r\n\r\n                    <Box py={1}>\r\n                        <FormLabel>Note Category</FormLabel>\r\n                        <Field component={RadioGroup} name=\"category\" row >\r\n                            <FormControlLabel\r\n                                value=\"money\"\r\n                                control={<Radio />}\r\n                                label=\"Money\"\r\n                                disabled={isSubmitting}\r\n                            />\r\n                            <FormControlLabel\r\n                                value=\"todos\"\r\n                                control={<Radio />}\r\n                                label=\"Todos\"\r\n                                disabled={isSubmitting}\r\n                            />\r\n                            <FormControlLabel\r\n                                value=\"reminders\"\r\n                                control={<Radio />}\r\n                                label=\"Reminders\"\r\n                                disabled={isSubmitting}\r\n                            />\r\n                            <FormControlLabel\r\n                                value=\"work\"\r\n                                control={<Radio />}\r\n                                label=\"Work\"\r\n                                disabled={isSubmitting}\r\n                            />\r\n                        </Field>\r\n                    </Box>                   \r\n\r\n                    <Button  \r\n                        variant=\"contained\" \r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        endIcon={<ArrowForwardIosIcon />}\r\n                        startIcon={isSubmitting? \r\n                            <CircularProgress size=\"0.9rem\" color=\"secondary\"/> :\r\n                            null\r\n                        }\r\n                        disabled={isSubmitting}\r\n                    >\r\n                    {\r\n                        isSubmitting? \"Submitting\" : \"Submit\"\r\n                    }\r\n                    </Button>\r\n\r\n                    <pre>{JSON.stringify(errors, null, 4)}</pre>\r\n                    <pre>{JSON.stringify(values, null, 4)}</pre>\r\n                </Form>\r\n            )}\r\n            </Formik>            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Create\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport { yellow } from '@material-ui/core/colors';\r\n\r\n\r\n// NOTE: If you are using TypeScript, then you would also need to use module augmentation for ADDING NEW VALUES\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      // Purple and green play nicely together.\r\n      main: yellow[400],\r\n    },\r\n    secondary: {\r\n      // This is green.A700 as hex.\r\n      main: '#11cb5f',\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme","import { makeStyles } from \"@material-ui/core\"\r\n\r\nconst drawerWidth=240\r\n\r\nexport const useStyles = makeStyles((theme) => {\r\n    return {\r\n        page:{\r\n            background: \"#f9f9f9\",\r\n            width: \"100%\",\r\n            padding: theme.spacing(3)\r\n        },\r\n        drawer: {\r\n            width:drawerWidth,\r\n        },\r\n        drawerPaper: {\r\n            width: drawerWidth\r\n        },\r\n        root:{\r\n            display: \"flex\"\r\n        },\r\n        active:{\r\n            background: '#f4f4f4'\r\n        },\r\n        title: {\r\n            padding:theme.spacing(2)\r\n        },\r\n        appbar: {\r\n            width:`calc(100% - ${drawerWidth}px)`\r\n        },\r\n        toolbar: theme.mixins.toolbar,\r\n        date: {\r\n            flexGrow:1\r\n        },\r\n        avatar: {\r\n            marginLeft: theme.spacing(2)\r\n        }\r\n    }\r\n})","import Drawer from '@material-ui/core/Drawer'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport SubjectOutlinedIcon from '@material-ui/icons/SubjectOutlined';\r\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport {format} from 'date-fns'\r\nimport { useStyles } from './layout.styles';\r\nimport { AuxProps, IMenu } from './types'\r\n \r\n\r\n\r\n// useLocation is a function in react router dom to determine which page we are on\r\nconst Layout = ({children}:AuxProps) => {\r\n    const history = useHistory()\r\n    const {page, drawer, root, drawerPaper, active, avatar, title, appbar, toolbar, date} = useStyles()\r\n    const location = useLocation()\r\n\r\n    const menuItems:IMenu[] = [\r\n        {\r\n            text: \"My Notes\",\r\n            icon: <SubjectOutlinedIcon color=\"secondary\" />,\r\n            path: '/'\r\n        },\r\n        {\r\n            text: \"Create Note\",\r\n            icon: <AddCircleOutlineOutlinedIcon color=\"secondary\" />,\r\n            path: '/create'\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <div className={root}>\r\n            <AppBar\r\n                className={appbar}\r\n                elevation={0}\r\n            >\r\n                <Toolbar>\r\n                    <Typography className={date}>\r\n                    Today is the { format(new Date(), 'do MMMM Y') }\r\n                    </Typography>\r\n                    <Typography>\r\n                        Mario\r\n                    </Typography>\r\n                    <Avatar src=\"mario-av.png\" className={avatar}/>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Drawer \r\n                className={drawer}\r\n                variant=\"permanent\"\r\n                anchor=\"left\"\r\n                classes={{\r\n                    paper: drawerPaper\r\n                }}\r\n            >\r\n                <div>\r\n                    <Typography variant=\"h5\" className={title}>\r\n                        NINJA LIST\r\n                    </Typography>\r\n                </div>\r\n                <List>\r\n                {\r\n                    menuItems.map(item => (\r\n                        <ListItem\r\n                            button\r\n                            key={item.text}\r\n                            onClick={() => history.push(item.path)}\r\n                            className={\r\n                                location.pathname === item.path?\r\n                                active:\r\n                                undefined\r\n                            }\r\n                        >\r\n                            <ListItemIcon>{item.icon}</ListItemIcon>\r\n                            <ListItemText \r\n                                primary={item.text}\r\n                            />\r\n                        </ListItem>\r\n                    ))\r\n                }\r\n                </List>\r\n            </Drawer>\r\n\r\n            <div className={page}>\r\n                <div className={toolbar}></div>\r\n                    {children}\r\n                \r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout\r\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Notes from './pages/notes/Notes'\nimport Create from './pages/create/Create';\nimport './App.css';\nimport theme from './theme';\nimport { ThemeProvider } from '@material-ui/styles';\nimport Layout from './components/layout'\n\n\nfunction App() {\n  return (  \n    <ThemeProvider theme={theme}>\n    <Router>\n      <Layout>\n        <Switch>\n          <Route exact path=\"/\">\n            <Notes />\n          </Route>\n          <Route path=\"/create\">\n            <Create />\n          </Route>\n        </Switch>\n      </Layout>\n    </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}